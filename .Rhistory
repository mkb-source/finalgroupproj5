knitr::opts_chunk$set(echo = TRUE)
library(fpp3)
credit <- read.csv('credit.csv')
credit <- tsibble(credit, index = ï..credit_in_millions)
names(credit)[1] <- 'Credit_in_millions'
credit <- tsibble(credit, index = ï..credit_in_millions)
credit <- tsibble(credit, index = Credit_in_millions)
fit <- credit %>%
model(ARIMA(credit))
autoplot(credit)
View(credit)
plot(credit)
credit <- credit %>%
add_column(newColname = 'time')
View(credit)
View(credit)
credit <- credit %>%
add_column(newColname = row)
credit$newColname <- row_number()
head(credit)
row <- c(1,2,3,4,5,6)
credit <- credit %>%
add_column(time = row)
row <- c(1:6)
row <- c(1:492)
credit <- credit %>%
add_column(time = row)
head(credit)
View(credit)
droplevels(credit[2])
View(credit)
credit <- droplevels(credit[2])
View(credit)
credit <- read.csv('credit.csv')
names(credit)[1] <- 'Credit_in_millions'
row <- c(1:492)
credit <- credit %>%
add_column(time = row)
head(credit)
plot(credit)
credit <- tsibble(credit, index = Credit_in_millions)
credit <- tsibble(credit)
credit <- tsibble(credit, index = time)
autoplot(credit)
fit <- credit %>%
model(ARIMA(credit))
gg_tsresiduals(fit)
plot(credit)
credit <- tsibble(credit, index = time)
autoplot(credit)
View(fit)
knitr::opts_chunk$set(echo = TRUE)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
load("C:/Users/dyrha/OneDrive/Desktop/BAS 475/finalgroupproj5/.RData")
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
library(fpp3)
knitr::opts_chunk$set(echo = TRUE)
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
#arima
fit <- credit_ts %>%
model(ARIMA(credit))
gg_tsresiduals(fit)
#arima
fit <- credit_ts %>%
model(ARIMA(credit_ts))
gg_tsresiduals(fit)
View(credit_ts)
#arima
fit <- credit_ts %>%
model(ARIMA(credit_in_millions))
gg_tsresiduals(fit)
library(fpp3)
data("aus_production")
fit <- aus_production %>%
model(
m1 = TSLM(Cement ~ trend() + season() + Electricity),
m2 = TSLM(Cement ~ trend() + season())
)
glance(fit)
m2 <- fit %>%
select(m2)
report(m2)
fit <- aus_production %>%
model(
tf1 = TSLM(Cement ~ ),
fit <- aus_production %>%
model(
tf1 = TSLM(Cement ~ trend() + fourier(K = 1)),
tf2 = TSLM(Cement ~ trend() + fourier(K = 2)),
f1 = TSLM(Cement ~ fourier(K = 1)),
f2 = TSLM(Cement ~ fourier(K = 2))
)
glance(fit)
glance(fit) %>%
arrange(AIC)
fit %>%
select(tf2) %>%
forecast(aus_production) %>%
autoplot(aus_production)
fit %>%
select(tf2) %>%
gg_tsresiduals()
ses_weights <- function(alpha) {
i <- 0:4
weights <- alpha * (1 - alpha) ^ i
plot(i, weights, type = 'l', main = paste('alpha = ', alpha))
text(weights, x = i, y = weights, col = 'red')
}
ses_weights(alpha = 0.2)
ses_weights(alpha = 0.8)
# In practice you'll usually let ETS decide its parameters for you
# ie ETS(Cement)
fit <- aus_production %>%
model(ETS(Cement ~ error('A') + trend('N') + season('N')))
fit %>%
forecast(h = 200) %>%
autoplot(aus_production)
# In practice you'll usually let ETS decide its parameters for you
# ie ETS(Cement)
fit <- aus_production %>%
model(ETS(Cement ~ error('A') + trend('A') + season('N')))
fit %>%
forecast(h = 200) %>%
autoplot(aus_production)
fit <- aus_production %>%
model(ETS(Cement))
fit %>%
forecast(h = 200) %>%
autoplot(aus_production)
report(fit)
data("aus_production")
aus_production %>%
autoplot(Cement)
lambda <- aus_production %>%
features(Cement, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Cement, lambda))
aus_production %>%
autoplot(difference(difference(box_cox(Cement, lambda), 4), 1))
aus_production %>%
mutate(Cement = box_cox(Cement, lambda)) %>%
autoplot(difference(Cement, 4))
x <- c(5,10,15,20,25,30,35,40)
difference(x,4)
autoplot(difference(Cement, 4)) %>%
x <- c(5,10,15,20,25,30,35,40)
autoplot(difference(Cement, 4))
x <- c(5,10,15,20,25,30,35,40)
difference(x,4)
aus_production %>%
mutate(Cement = box_cox(Cement, lambda)) %>%
mutate(Cement = difference(Cement, 4)) %>%
mutate(Cement = difference(Cement, 1))
aus_production %>%
mutate(Cement = box_cox(Cement, lambda)) %>%
mutate(Cement = difference(Cement, 4)) %>%
mutate(Cement = difference(Cement, 1)) %>%
autoplot(difference(Cement, 4))
fit <- aus_production %>%
model(ARIMA(Cement))
report(fit)
q()
knitr::opts_chunk$set(echo = TRUE)
fc <- arima %>%
forecast(h = 12)
knitr::opts_chunk$set(echo = TRUE)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
#arima
arima <- credit_ts %>%
model(ARIMA(credit_in_millions))
knitr::opts_chunk$set(echo = TRUE)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
knitr::opts_chunk$set(echo = TRUE)
library(fpp3)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
#naive
naive <- credit_ts %>%
model(NAIVE(credit_in_millions))
report(naive)
fc <- naive %>%
forecast(h = 12)
y_pred1 <- fc$.mean
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(y_pred1, y_actual1)
mape(y_pred1, y_actual1)
#nnet
#arima
arima <- credit_ts %>%
model(ARIMA(credit_in_millions))
gg_tsresiduals(arima)
fc <- arima %>%
forecast(h = 12)
y_pred1 <- fc$.mean
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(y_pred1, y_actual1)
mape(y_pred1, y_actual1)
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
#naive
naive <- credit_ts %>%
model(NAIVE(credit_in_millions))
report(naive)
fc <- naive %>%
forecast(h = 12)
y_pred1 <- fc$.mean
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(y_actual1, y_pred1)
mape(y_actual1, y_pred1)
