load(credit.csv)
read.csv(credit.csv)
load("credit.csv")
read.csv("credit.csv")
load("credit.csv")
show(credit.csv)
library(dplyr)
library(fitdistrplus)
library(fpp3)
library(forecast)
library(regclass)
library(shiny)
read.csv("credit.csv")
show(credit.csv)
load(credit.csv)
load("credit.csv")
library(readr)
credit <- read_csv("credit.csv")
View(credit)
load("credit.csv")
load("/Users/makenziebarber/Downloads/credit copy.rdata")
load("credit.csv")
load("credit1.csv")
load("credit1.rdata")
read.csv("credit.csv")
credit.csv %>%
forecast(k=12)
credit %>%
forecast(k=12)
credit %>%
forecast(k = 12)
fit1 <- credit %>%
model(Arima(credit_in_millions))
#tsibble conversion
seq.Date(as.Date("1981/1/1"), as.Date("2022/1/1"),"years")
#tsibble conversion
credit %>%seq.Date(as.Date("1981/1/1"), as.Date("2022/1/1"),"years")
#tsibble conversion
credit %>%seq.Date(from= as.Date("1981/1/1"), as.Date("2022/1/1"),"years")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
by = "years")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
by = "month")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
by = "Month")
?seq.Date
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
length.out = 41),
by = "Month")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
length.out = 41,
by = "Month")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
tov = as.Date("2022/1/1")
length.out = 41,
by = "Month")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
tov = as.Date("2022/1/1"),
length.out = 41,
by = "Month")
#tsibble conversion
credit %>%seq.Date(
from = as.Date("1981/1/1"),
to = as.Date("2022/1/1"),
length.out = 41,
by = "Month")
#tsibble conversion
credit %>%
mutate(Monrh = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month))
#tsibble conversion
credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month))
#tsibble conversion
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
View(credit_ts)
credit_ts %>%
forecast(h = 12)
credit_ts %>%
forecast(h = 12)
View(credit_ts)
show(credit)
show(credit_ts)
credit_ts %>%
forecast(h = 12) %>%
autoplot()
class(credit_ts)
autoplot(credit_ts)
credit_ts <- rev(credit_ts)
autoplot(credit_ts)
rev_credit_ts <- rev(credit_ts)
autoplot(rev_credit_ts)
apply(credit_ts, 1, rev)
apply(credit_ts, 2, rev)
apply(credit_ts, "credit_in_millions", rev)
sort(credit_ts, decreasing = TRUE)
sort.list(credit_ts, decreasing = TRUE)
sort.list("credit_in_millions", decreasing = TRUE)
sort.list("credit_in_millions", decreasing = FALSE)
sort.list("credit_ts", decreasing = FALSE)
credit_ts_rev <- sort.list("credit_ts", decreasing = FALSE)
autoplot(credit_ts_rev)
credit_ts_rev <- sort("credit_ts", decreasing = FALSE)
credit_ts_rev <- rev("credit_ts", decreasing = FALSE)
credit_ts_rev <- rev("credit_ts")
View(rev_credit_ts)
View(credit_ts)
read.csv("credit.csv")
load("/Users/makenziebarber/Downloads/credit.rdata")
read.csv("credit.csv")
read.csv("credit.rdata")
load("credit.rdata")
library(readr)
credit <- read_csv("~/Downloads/credit.rdata")
View(credit)
load("credit.rdata")
read.csv("credit.rdata")
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
fit1 <- credit_ts %>%
model(ARIMA(credit_in_millions)) %>%
autoplot()
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
fit1 <- credit_ts %>%
model(ARIMA(credit_in_millions)) %>%
autoplot()
fit1 <- credit_ts %>%
model(ARIMA(credit_in_millions))
View(fit1)
fit %>%
forecast(h = 12) %>%
autoplot(credit_ts)
fit1 %>%
forecast(h = 12) %>%
autoplot(credit_ts)
report(fit1)
log(credit_ts)
log(credit_in_millions)
library(readr)
credit <- read_csv("~/Downloads/credit.rdata")
View(credit)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
fit1 <- credit_ts %>%
model(ARIMA(credit_in_millions))
report(fit1)
fit1 %>%
forecast(h = 12) %>%
autoplot(credit_ts)
fit1 <- credit_ts %>%
model(NAIVE(credit_in_millions))
report(fit1)
fit1 %>%
forecast(h = 12) %>%
autoplot(credit_ts)
naive <- credit_ts %>%
model(NAIVE(credit_in_millions))
report(naive)
naive %>%
forecast(h = 12) %>%
autoplot(credit_ts)
summary(naive)
report(naive)
naive %>%
forecast(h = 12) %>%
autoplot(credit_ts)
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
fc <- naive %>%
forecast(h = 12)
autoplot(fc)
naive <- credit_ts %>%
model(NAIVE(credit_in_millions))
fc <- naive %>%
forecast(h = 12)
fc <- naive %>%
forecast(h = 12) %>%
autoplot(credit_ts)
autoplot(fc)
ggplot(fc)
fc <- naive %>%
forecast(h = 12) %>%
autoplot(credit_ts)
naive %>%
forecast(h = 12) %>%
autoplot(credit_ts)
rmse(fc, y_actual)
y_actual1 <- credit_ts$credit_in_millions
rmse(fc, y_actual1)
fc <- naive %>%
forecast(h = 12)
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(fc, y_actual1)
y_pred1 <- fc$.mean
rmse(fc, y_actual1)
rmse(y_pred1, y_actual1)
mape(y_pred1, y_actual1)
knitr::opts_chunk$set(echo = TRUE)
#nnet
train <- head(credit_ts, nrow(credit_ts) - 12)
test <- tail(credit_ts, 12)
fit <- train %>%
model(nnet = NNETAR(credit_in_millions))
library(fpp3)
#nnet
train <- head(credit_ts, nrow(credit_ts) - 12)
test <- tail(credit_ts, 12)
fit <- train %>%
model(nnet = NNETAR(credit_in_millions))
fit %>%
forecast(h = 12, times=5)
accuracy(fit)
pred <- test %>%
model(nnet = NNETAR(credit_in_millions))
pred %>%
forecast(h = 12, times=5)
accuracy(pred)
knitr::opts_chunk$set(echo = TRUE)
library(fpp3)
#data clean up
#dont touch unless you want death <3 -makenzie
credit <- transform(credit, credit_in_millions = rev(credit_in_millions))
credit_ts <- credit %>%
mutate(Month = seq(as.Date("1981/1/1"), by = 'month', length.out = nrow(credit))) %>%
mutate(Month = yearmonth(Month)) %>%
as_tsibble(index = Month)
autoplot(credit_ts)
#naive
naive <- credit_ts %>%
model(NAIVE(credit_in_millions))
report(naive)
fc <- naive %>%
forecast(h = 12)
y_pred1 <- fc$.mean
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(y_pred1, y_actual1)
mape(y_pred1, y_actual1)
#nnet
fit <- credit_ts %>%
model(nnet = NNETAR(credit_in_millions))
fc<-fit %>%
forecast(h = 12)
y_pred1 <- fc$.mean
y_actual1 <- credit_ts$credit_in_millions
rmse <- function(y_actual, y_pred) {sqrt(mean(y_actual - y_pred)^2)}
mape <- function(y_actual, y_pred) {mean(abs(y_actual - y_pred / y_actual))}
rmse(y_pred1, y_actual1)
mape(y_pred1, y_actual1)
